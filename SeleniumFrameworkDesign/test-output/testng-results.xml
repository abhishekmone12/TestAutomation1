<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-06T11:09:47 IST" name="Suite" finished-at="2025-02-06T11:10:13 IST" duration-ms="25919">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.loginErrorValdation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" name="loginErrorValdation" class="rahulshettyacademy.Tests.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.SubmitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" name="SubmitOrder" class="rahulshettyacademy.Tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2025-02-06T11:09:47 IST" name="Error Validations Test" finished-at="2025-02-06T11:10:10 IST" duration-ms="22995">
      <class name="rahulshettyacademy.Tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:09:48 IST" name="launchApplication" finished-at="2025-02-06T11:09:55 IST" duration-ms="7771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="loginErrorValdation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:09:55 IST" name="loginErrorValdation" finished-at="2025-02-06T11:09:56 IST" duration-ms="677" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.Tests.ErrorValidationTest.loginErrorValdation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValdation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:09:56 IST" name="tearDown" finished-at="2025-02-06T11:09:56 IST" duration-ms="274" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:09:56 IST" name="launchApplication" finished-at="2025-02-06T11:10:01 IST" duration-ms="4921" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginErrorValdation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:10:01 IST" name="loginErrorValdation" finished-at="2025-02-06T11:10:02 IST" duration-ms="592" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at rahulshettyacademy.Tests.ErrorValidationTest.loginErrorValdation(ErrorValidationTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1575)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValdation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:10:02 IST" name="tearDown" finished-at="2025-02-06T11:10:02 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:10:02 IST" name="launchApplication" finished-at="2025-02-06T11:10:07 IST" duration-ms="5024" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="productErrorValdation()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:10:07 IST" name="productErrorValdation" finished-at="2025-02-06T11:10:10 IST" duration-ms="2802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValdation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.ErrorValidationTest@39d76cb5]" started-at="2025-02-06T11:10:10 IST" name="tearDown" finished-at="2025-02-06T11:10:10 IST" duration-ms="252" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.Tests.ErrorValidationTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2025-02-06T11:09:47 IST" name=" Submit Order Test" finished-at="2025-02-06T11:10:13 IST" duration-ms="25919">
      <class name="rahulshettyacademy.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:09:48 IST" name="launchApplication" finished-at="2025-02-06T11:09:55 IST" duration-ms="7388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:09:55 IST" name="SubmitOrder" data-provider="getData" finished-at="2025-02-06T11:09:59 IST" duration-ms="3835" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Auto@123!, product=IPHONE 13 PRO, email=abhishekmone.12@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:09:59 IST" name="tearDown" finished-at="2025-02-06T11:09:59 IST" duration-ms="254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:09:59 IST" name="launchApplication" finished-at="2025-02-06T11:10:03 IST" duration-ms="4265" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="SubmitOrder(java.util.HashMap)[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:10:03 IST" name="SubmitOrder" data-provider="getData" finished-at="2025-02-06T11:10:07 IST" duration-ms="3893" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=IPHONE 13 PRO, email=anshika@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:10:07 IST" name="tearDown" finished-at="2025-02-06T11:10:08 IST" duration-ms="289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:10:08 IST" name="launchApplication" finished-at="2025-02-06T11:10:12 IST" duration-ms="4647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="VerifyOrderDisplay()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:10:12 IST" name="VerifyOrderDisplay" finished-at="2025-02-06T11:10:13 IST" depends-on-methods="rahulshettyacademy.Tests.SubmitOrderTest.SubmitOrder" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOrderDisplay -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:rahulshettyacademy.Tests.SubmitOrderTest@376a0d86]" started-at="2025-02-06T11:10:13 IST" name="tearDown" finished-at="2025-02-06T11:10:13 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- rahulshettyacademy.Tests.SubmitOrderTest -->
    </test> <!--  Submit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
